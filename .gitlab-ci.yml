# SPDX-FileCopyrightText: Copyright Â© DUNE Project contributors, see file LICENSE.md in module root
# SPDX-License-Identifier: LGPL-2.1-or-later

---
include:
  - project: 'core/ci-config'
    ref: master
    file: 'config/common/master.yml'
  - project: 'core/ci-config'
    ref: master
    file: 'jobs/common/master.yml'

before_script:
  - . /duneci/bin/duneci-init-job
  - duneci-install-module https://gitlab.dune-project.org/core/dune-common.git
  - duneci-install-module https://gitlab.dune-project.org/core/dune-geometry.git

.common: &common
  script:
    - duneci-standard-test
    # test dune-grid as well
    - export DUNE_CONTROL_PATH=$(pwd):/duneci/modules:$DUNE_CONTROL_PATH
    - duneci-install-module https://gitlab.dune-project.org/core/dune-grid.git
    - cd /duneci/modules/dune-grid && duneci-standard-test
  tags: [duneci]
  artifacts:
    expire_in: 2 years
    reports:
      junit: junit/*.xml

# specific job for testing sequential library version
debian:11 gcc-10-20 sequential:
  <<: *common
  image: registry.dune-project.org/docker/ci/debian:11
  variables:
    DUNECI_TOOLCHAIN: gcc-10-20
    DUNECI_CMAKE_FLAGS: "-DUG_ENABLE_PARALLEL=0"

# specific job for testing the debug version
debian:10 gcc-10-20 debug:
  <<: *common
  image: registry.dune-project.org/docker/ci/debian:11
  variables:
    DUNECI_TOOLCHAIN: gcc-10-20
    DUNECI_CMAKE_FLAGS: "-DUG_ENABLE_DEBUGGING:BOOL=1"

# Check for spelling mistakes in text
code-spelling-check:
  stage: .pre
  # Avoid the global 'before_script'
  before_script: ""
  image: registry.dune-project.org/docker/ci/debian:11
  tags: [duneci]
  script:
  - codespell
    --ignore-words-list alph,ba,broser,createdd,enew,feld,fo,nd,nin,pres,te,theif

reuse:
  stage: .pre
  image:
    name: docker.io/fsfe/reuse:latest
    entrypoint: [""]
  tags: [duneci]
  before_script: ""
  script:
    - reuse lint
